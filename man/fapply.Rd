% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmt.R
\name{fapply}
\alias{fapply}
\title{Apply a format to a vector}
\usage{
fapply(fmt, vect, lookup = NULL)
}
\arguments{
\item{fmt}{A format to be applied.}

\item{vect}{A vector to apply the format to.}

\item{lookup}{An optional lookup vector. This parameter is used when the
format is a list.  If specified, the function will first lookup which 
format to apply, and then apply it to the vector value.}
}
\value{
A vector of formatted values.
}
\description{
The \code{fapply} function can be used to apply a format to a vector.
}
\details{
The \code{fapply} function accepts several types of formats:  named vectors,
vectorized functions, user-defined formats, or a list of formats.
The function will first determine the type of format, and then apply 
the format in the appropriate way.  Results are returned as a vector.
}
\examples{
# Set up vector
v1 <- c("A", "B", "C", "B")

# Set up named vector for formatting
fmt1 <- c(A = "Vector Label A", B = "Vector Label B", C = "Vector Label C")

# Apply format to vector
fapply(fmt1, v1)

# Define format
fmt2 <- value(condition(x == "A", "Format Label A"),
              condition(x == "B", "Format Label B"), 
              condition(TRUE, "Format Other"))
              
# Apply format to vector
fapply(fmt2, v1)

fmt3 <- Vectorize(function(x) {

  if (x == "A")
    ret <- "Function Label A"
  else if (x == "B")
    ret <- "Function Label B"
  else
    ret <- "Function Other" 
    
  return(ret)
})

# Apply format to vector
fapply(fmt3, v1)
}
\seealso{
\code{\link{value}} to define a format,
\code{\link{condition}} to define the conditions for a format.
}
