% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format.R
\name{format_dataframe}
\alias{format_dataframe}
\alias{format.tbl}
\alias{format.data.frame}
\title{Format a data table}
\usage{
format_dataframe(x, ...)
}
\arguments{
\item{x}{A data frame or tibble to be formatted.}

\item{...}{Any follow-on parameters to the format function.}
}
\value{
A new, formatted data frame or tibble with the formats applied.
}
\description{
The \code{format_dataframe} function applies formatting attributes
to the entire data frame.
}
\details{
If formats are assigned to the "format" attributes of the data frame
columns, the \code{format_dataframe} function will apply those formats
to the specified columns, and return a new formatted data frame. 
Format can be specified as named vectors, vectorized formatting functions, 
or a user-defined format.  The \code{format_dataframe} function will
apply the format to the associated column data using the \code{fapply} 
function.  A format can also be specified as a list of 
formats of the previous three types.  

The \code{format_dataframe} function has two overrides: 
\code{format.data.frame} and \code{format.tbl}.  The two overrides will
call \code{format_dataframe} on the data.frame class and the tbl (tibble)
class, respectively.
}
\examples{
## Example 1: Simple Formats ##
# Set up data frame
df <- mtcars[1:10, c("mpg", "cyl")]

# Define and assign formats
attr(df$mpg, "format") <- value(condition(x >= 20, "High"),
                                condition(x < 20, "Low"))
                                
attr(df$cyl, "format") <- value(condition(x == 4, "Small"),
                                condition(x == 6, "Midsize"),
                                condition(x == 8, "Large"))
              
# Apply formatting
format(df)

## Example 2: Formatting List ##
# Set up data
v1 <- c("type1", "type2", "type3", "type2", "type3", "type1")
v2 <- list(1.258, "H", as.Date("2020-06-19"),
           "L", as.Date("2020-04-24"), 2.8865)

df <- data.frame(type = v1, values = I(v2))
df

# Create formatting list
lst <- list()
lst$type1 <- function(x) format(x, digits = 2, nsmall = 1)
lst$type2 <- value(condition(x == "H", "High"),
                   condition(x == "L", "Low"),
                   condition(TRUE, "NA"))
lst$type3 <- function(x) format(x, format = "\%y-\%m")

# Assign list and lookup to column attributes
attr(df$values, "format") <- lst
attr(df$values, "format_lookup") <- "type"

# Apply formatting list
format(df)
}
\seealso{
\code{\link{value}} to define a format,
\code{\link{levels}} or \code{labels} to access the labels, and 
\code{\link{fapply}} to apply the format to a vector.
}
